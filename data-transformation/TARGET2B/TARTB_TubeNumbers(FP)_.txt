let
    Source = Csv.Document(File.Contents("Z:\QuickHMNY\data_in\TARTB\MEMIC_Overview_Tubenumbers_20231013_11_34.csv"),[Delimiter=",", Columns=50, Encoding=1252, QuoteStyle=QuoteStyle.None]),
    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"SUBJECT_ID", Int64.Type}, {"REGISTRATION_ID", type text}, {"BL Tube I Number", type text}, {"BL Tube I send", type text}, {"BL Tube I progress completed", type text}, {"BL Tube II Number", type text}, {"BL Tube II send", type text}, {"BL Tube II progress completed", type text}, {"VD1 Tube I Number", type text}, {"VD1 Tube I send", type text}, {"VD1 Tube I progress completed", type text}, {"VD1 Tube II Number", type text}, {"VD1 Tube II send", type text}, {"VD1 Tube II progress completed", type text}, {"FU1 Tube I Number", type text}, {"FU1 Tube I send", type text}, {"FU1 Tube I progress completed", type text}, {"FU1 Tube II Number", type text}, {"FU1 Tube II send", type text}, {"FU1 Tube II progress completed", type text}, {"PreVD3 Tube Number", type text}, {"PreVD3 Tube send", type text}, {"PreVD3 Tube progress completed", type text}, {"VD3+7 Tube Number", type text}, {"VD3+7 Tube send", type text}, {"VD3+7 Tube progress completed", type text}, {"VD3 Tube I Number", type text}, {"VD3 Tube I send", type text}, {"VD3 Tube I progress completed", type text}, {"VD3 Tube II Number", type text}, {"VD3 Tube II send", type text}, {"VD3 Tube II progress completed", type text}, {"PreBooster1 Tube Number", type text}, {"PreBooster1 Tube send", type text}, {"PreBooster1 Tube progress completed", type text}, {"Booster1 Tube I Number", type text}, {"Booster1 Tube I send", type text}, {"Booster1 Tube I progress completed", type text}, {"Booster1 Tube II Number", type text}, {"Booster1 Tube II send", type text}, {"Booster1 Tube II progress completed", type text}, {"Extra Tube Number", type text}, {"Extra Tube send", type text}, {"Extra Tube progress completed", type text}, {"Extension BL Tube Number", type text}, {"Extension BL Tube send", type text}, {"Extension BL Tube progress completed", type text}, {"Extension FU Tube Number", type text}, {"Extension FU Tube send", type text}, {"Extension FU Tube progress completed", type text}}),
        
    #"Removed Other Columns" = Table.SelectColumns(#"Changed Type",{"REGISTRATION_ID", "BL Tube I Number", "BL Tube II Number", "VD1 Tube I Number", "VD1 Tube II Number", "FU1 Tube I Number", "FU1 Tube II Number", "PreVD3 Tube Number", "VD3+7 Tube Number", "VD3 Tube I Number", "VD3 Tube II Number", "PreBooster1 Tube Number", "Booster1 Tube I Number", "Booster1 Tube II Number", "Extra Tube Number", "Extension BL Tube Number", "Extension FU Tube Number"}),
    
    #"Unpivoted Other Columns" = Table.UnpivotOtherColumns(#"Removed Other Columns", {"REGISTRATION_ID"}, "Attribute", "Value"),
    
//--> exclude rows that don't have sampleID matched to Participant  
    #"Filtered Rows1" = Table.SelectRows(#"Unpivoted Other Columns", each [Value] <> "" and [Value] <> "ABS CoV2 4999" and not Text.StartsWith([Value], "R") and not Text.StartsWith([Value], "VU")),

//--> remove values that don't contain valid TubeNrs !
    #"Uppercased Text" = Table.TransformColumns(#"Filtered Rows1",{{"Value", Text.Upper, type text}}),
    #"Replaced Value startsWith""R""" = Table.ReplaceValue(#"Uppercased Text",
        each [Value], 
        each if Text.StartsWith([Value], "R") then "" 
        else [Value],Replacer.ReplaceText,{"Value"}
    ),
    #"Replaced Value startsWith""W""" = Table.ReplaceValue(#"Replaced Value startsWith""R""",
        each [Value], 
        each if Text.StartsWith([Value], "W") then "" 
        else [Value],Replacer.ReplaceText,{"Value"}
    ),
    //--> clean sampleID column > missing leading zeros !
    #"Added Custom sampleID(correct)" = Table.AddColumn(#"Replaced Value startsWith""W""", 
        "sampleID", 
        each if Text.Contains([Value], "VAC") then 
            "VAC " & Text.PadStart(Text.Middle([Value], 4), 5, "0")
        else [Value]
    ),
    #"Changed Type sampleID(correct)" = Table.TransformColumnTypes(#"Added Custom sampleID(correct)",{{"sampleID", type text}}),
    #"Removed Column ""Value""" = Table.RemoveColumns(#"Changed Type sampleID(correct)",{"Value"}),
    
    #"Renamed Columns" = Table.RenameColumns(#"Removed Column ""Value""",{{"REGISTRATION_ID", "Participant Id"}, {"Attribute", "Timepoint ??"}}),

//--> extract T2B-specific TimepointNames
    #"Extracted Text Before Delimiter" = Table.TransformColumns(#"Renamed Columns", {{"Timepoint ??", each Text.BeforeDelimiter(_, " Tube"), type text}})

in
    #"Extracted Text Before Delimiter"