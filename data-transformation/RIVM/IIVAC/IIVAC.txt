let

//==== default steps after Get > CSV > Transform data
    Source = Csv.Document(File.Contents("Z:\QuickHMNY\data_in\IIVAC\IIVAC_mixed_data_1.csv"),[Delimiter=",", Columns=29, Encoding=1252, QuoteStyle=QuoteStyle.None]),
    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"ID", Int64.Type}, {"Age_Vacc_COVID1", Int64.Type}, {"alggeslacht", Int64.Type}, {"schermvacdate1", type date}, {"schermvacnaam1", type text}, {"schermvacdate2", type date}, {"schermvacnaam2", type text}, {"vacdatebooster", type date}, {"vacnamebooster", type text}, {"positive_date1", type text}, {"positive_date2", type date}, {"positive_date3", type date}, {"positive_date4", type date}, {"positive_date5", type date}, {"T0 sample date", type date}, {"MIA_CoV19_N_BAU_Titer.1", type number}, {"MIA_CoV19_S1_BAU_Titer.1", type number}, {"T2 sample date", type date}, {"MIA_CoV19_N_BAU_Titer.2", type number}, {"MIA_CoV19_S1_BAU_Titer.2", type number}, {"T3 sample date", type date}, {"MIA_CoV19_N_BAU_Titer.3", type number}, {"MIA_CoV19_S1_BAU_Titer.3", type number}, {"B0 sample date", type date}, {"MIA_CoV19_N_BAU_Titer.4", type number}, {"MIA_CoV19_S1_BAU_Titer.4", type number}, {"B1 sample date", type date}, {"MIA_CoV19_N_BAU_Titer.5", type number}, {"MIA_CoV19_S1_BAU_Titer.5", type number}}),
    
//1.1. select & remove columns not needed

//1.2. rename columns (not those that get removed after added 'Customs')
    #"Renamed Columns1" = Table.RenameColumns(#"Changed Type",{
        {"ID", "Participant Id"}, 
        {"Age_Vacc_COVID1", "Age At Vacc"}, 
        {"alggeslacht", "Gender"}, 
        {"schermvacdate1", "Vaccination Dte 1"}, 
        {"schermvacdate2", "Vaccination Dte 2"}, 
        {"vacdatebooster", "Vaccination Dte 4"}, 
        {"positive_date1", "Infection Dte 1"}, 
        {"positive_date2", "Infection Dte 2"}, 
        {"positive_date3", "Infection Dte 3"}, 
        {"positive_date4", "Infection Dte 4"}, 
        {"positive_date5", "Infection Dte 5"}, 
        {"T0 sample date", "Sample Dte (T0)"}, 
        {"T2 sample date", "Sample Dte (T2)"}, 
        {"T3 sample date", "Sample Dte (T3)"}, 
        {"B0 sample date", "Sample Dte (T13)"}, 
        {"B1 sample date", "Sample Dte (T15)"}, 
        {"MIA_CoV19_N_BAU_Titer.1", "Anti N (T0)"}, 
        {"MIA_CoV19_S1_BAU_Titer.1", "Anti S1 (T0)"}, 
        {"MIA_CoV19_N_BAU_Titer.2", "Anti N (T2)"}, 
        {"MIA_CoV19_S1_BAU_Titer.2", "Anti S1 (T2)"}, 
        {"MIA_CoV19_N_BAU_Titer.3", "Anti N (T3)"}, 
        {"MIA_CoV19_S1_BAU_Titer.3", "Anti S1 (T3)"}, 
        {"MIA_CoV19_N_BAU_Titer.4", "Anti N (T13)"}, 
        {"MIA_CoV19_S1_BAU_Titer.4", "Anti S1 (T13)"}, 
        {"MIA_CoV19_N_BAU_Titer.5", "Anti N (T15)"}, 
        {"MIA_CoV19_S1_BAU_Titer.5", "Anti S1 (T15)"}
    }),
    
//==== from here improve 'Column quality'
    
    //2. replace empty values (dates => keep "null", other blanks => "No Record", numbers/decimals => keep "null")
    #"Replaced AllBlanks" = Table.ReplaceValue(#"Renamed Columns1","","No Record",Replacer.ReplaceValue,{"Participant Id", "Age At Vacc", "Gender", "Vaccination Dte 1", "schermvacnaam1", "Vaccination Dte 2", "schermvacnaam2", "Vaccination Dte 4", "vacnamebooster", "Infection Dte 2", "Infection Dte 3", "Infection Dte 4", "Infection Dte 5", "Sample Dte (T0)", "Anti N (T0)", "Anti S1 (T0)", "Sample Dte (T2)", "Anti N (T2)", "Anti S1 (T2)", "Sample Dte (T3)", "Anti N (T3)", "Anti S1 (T3)", "Sample Dte (T13)", "Anti N (T13)", "Anti S1 (T13)", "Sample Dte (T15)", "Anti N (T15)", "Anti S1 (T15)"}),

    //3. remove duplicate rows > unique patientIDs 
    #"Removed Duplicates" = Table.Distinct(#"Replaced AllBlanks", {"Participant Id"}),

//==== from here improve 'Column profile/distribution' => if applicable, replace values to reduce uniques, variations, etc.
    
    //4. format text columns
    #"Trimmed Text" = Table.TransformColumns(#"Removed Duplicates",{{"schermvacnaam1", Text.Trim, type text}, {"schermvacnaam2", Text.Trim, type text}, {"vacnamebooster", Text.Trim, type text}}),
    #"Cleaned Text" = Table.TransformColumns(#"Trimmed Text",{{"schermvacnaam1", Text.Clean, type text}, {"schermvacnaam2", Text.Clean, type text}, {"vacnamebooster", Text.Clean, type text}}),
    #"Capitalized Each Word" = Table.TransformColumns(#"Cleaned Text",{{"schermvacnaam1", Text.Proper, type text}, {"schermvacnaam2", Text.Proper, type text}, {"vacnamebooster", Text.Proper, type text}}),
    
    //5. replacing to clean string differences
    #"Replaced Value" = Table.ReplaceValue(#"Capitalized Each Word"," (Pfizer/Biontech)","",Replacer.ReplaceText,{"schermvacnaam1", "schermvacnaam2", "vacnamebooster"}),
    #"Replaced Value6" = Table.ReplaceValue(#"Replaced Value","Spikevax (Moderna)","Moderna",Replacer.ReplaceText,{"schermvacnaam1", "schermvacnaam2", "vacnamebooster"}),
    #"Replaced Value8" = Table.ReplaceValue(#"Replaced Value6","Unknown","No Record",Replacer.ReplaceText,{"schermvacnaam1", "schermvacnaam2", "vacnamebooster"}),
    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value8","Jcovden (Janssen)","Janssen",Replacer.ReplaceText,{"schermvacnaam1", "schermvacnaam2", "vacnamebooster"}),

//==== from here add 'Custom Column' => missing info (e.g. unit) + convert/re-code to same comparables (e.g. birthyear, vaccine brands)

    //6. custom columns - extra info
    #"Added Custom Unit" = Table.AddColumn(#"Replaced Value1", "Unit", each "BAU/ml"),
    #"Added Custom TestUsed" = Table.AddColumn(#"Added Custom Unit", "Test Used", each "MIA (RIVM)"),
    #"Added Custom StudyId" = Table.AddColumn(#"Added Custom TestUsed", "Study Id", each "IIVAC"),
    
    //7. custom columns - convert/re-code
    #"Added Custom Birthyear" = Table.AddColumn(#"Added Custom StudyId", "Birthyear", 
        each if [Vaccination Dte 1] = null or [Age At Vacc] = null then null
        else Date.Year(Date.AddYears([Vaccination Dte 1], - [Age At Vacc]))),
    
    //8. vacc brands recoded (accord.to T2B => 1=Comirnaty, 2=Moderna, 3=Astrazeneca, 4=Janssen)
    #"Added Custom VaccBrand1" = Table.AddColumn(#"Added Custom Birthyear", "Vaccine Brand 1", 
        each if [schermvacnaam1] = "Comirnaty" then 1
        else if [schermvacnaam1] = "Moderna" then 2
        else if [schermvacnaam1] = "Astrazeneca" then 3
        else if [schermvacnaam1] = "Janssen" then 4
        else null),
    #"Added Custom VaccBrand2" = Table.AddColumn(#"Added Custom VaccBrand1", "Vaccine Brand 2", 
        each if [schermvacnaam2] = "Comirnaty" then 1
        else if [schermvacnaam2] = "Moderna" then 2
        else if [schermvacnaam2] = "Astrazeneca" then 3
        else if [schermvacnaam2] = "Janssen" then 4
        else null),
    #"Added Custom VaccBrand3" = Table.AddColumn(#"Added Custom VaccBrand2", "Vaccine Brand 4", 
        each if [vacnamebooster] = "Comirnaty" then 1
        else if [vacnamebooster] = "Moderna" then 2
        else if [vacnamebooster] = "Astrazeneca" then 3
        else if [vacnamebooster] = "Janssen" then 4
        else null),

//=== clean inconsistent DateColumn(s) as text to date type (with Locale)
    #"Added Custom DateRemarks" = Table.AddColumn(#"Added Custom VaccBrand3", "Infection Dte 1 (Remarks)", 
        each if Text.Length(Text.Select([Infection Dte 1],{"A".."Z","a".."z"})) > 0 or Text.Length([Infection Dte 1]) < 6 or Text.Length([Infection Dte 1]) > 10 or Text.Contains([Infection Dte 1],"02-2021") then [Infection Dte 1] else ""),
    
    #"Replaced Value10" = Table.ReplaceValue(#"Added Custom DateRemarks",
        each [Infection Dte 1],
        each if Text.Length(Text.Select([Infection Dte 1],{"A".."Z","a".."z"})) > 0 or Text.Length([Infection Dte 1]) < 6 or Text.Length([Infection Dte 1]) > 10 then "" else [Infection Dte 1],
        Replacer.ReplaceText,{"Infection Dte 1"}),
    #"Replaced Value2" = Table.ReplaceValue(#"Replaced Value10","02-2021","",Replacer.ReplaceText,{"Infection Dte 1"}),
    #"Replaced Value3" = Table.ReplaceValue(#"Replaced Value2","-22","-2022",Replacer.ReplaceText,{"Infection Dte 1"}),
    #"Changed Type with Locale" = Table.TransformColumnTypes(#"Replaced Value3", {{"Infection Dte 1", type date}}, "en-GB"),

//==== from here additional/final steps to minimize DataSize 

    //eg. merge/remove (re-coded) columns
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type with Locale",{"schermvacnaam1", "schermvacnaam2", "vacnamebooster"}),
    
    //re-detect data types > check if correct
    #"Changed Type1" = Table.TransformColumnTypes(#"Removed Columns",{{"Participant Id", Int64.Type}, {"Age At Vacc", Int64.Type}, {"Gender", Int64.Type}, {"Vaccination Dte 1", type date}, {"Vaccination Dte 2", type date}, {"Vaccination Dte 4", type date}, {"Infection Dte 1", type date}, {"Infection Dte 2", type date}, {"Infection Dte 3", type date}, {"Infection Dte 4", type date}, {"Infection Dte 5", type date}, {"Sample Dte (T0)", type date}, {"Anti N (T0)", type number}, {"Anti S1 (T0)", type number}, {"Sample Dte (T2)", type date}, {"Anti N (T2)", type number}, {"Anti S1 (T2)", type number}, {"Sample Dte (T3)", type date}, {"Anti N (T3)", type number}, {"Anti S1 (T3)", type number}, {"Sample Dte (T13)", type date}, {"Anti N (T13)", type number}, {"Anti S1 (T13)", type number}, {"Sample Dte (T15)", type date}, {"Anti N (T15)", type number}, {"Anti S1 (T15)", type number}, {"Unit", type text}, {"Test Used", type text}, {"Study Id", type text}, {"Birthyear", Int64.Type}, {"Vaccine Brand 1", Int64.Type}, {"Vaccine Brand 2", Int64.Type}, {"Vaccine Brand 4", Int64.Type}})

in
    #"Changed Type1"
